{"version":3,"file":"static/js/341.71eb0841.chunk.js","mappings":"qTAIaA,EAAaC,EAAAA,GAAAA,KAAH,wEAMVC,EAAcD,EAAAA,GAAAA,MAAH,+CAIXE,EAAcF,EAAAA,GAAAA,MAAH,kDACF,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,IAAnB,IAGVC,EAAeP,EAAAA,GAAAA,OAAH,gSAGR,SAAAG,GAAC,OAAIA,EAAEC,MAAMI,YAAYC,MAAxB,IAEC,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,MAAMC,MAAlB,IACT,SAAAR,GAAC,OAAIA,EAAEC,MAAMC,OAAOO,KAAnB,IACU,SAAAT,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,IAAnB,IAEU,SAAAH,GAAC,OAAIA,EAAEC,MAAMS,UAAUC,QAAtB,IACtB,SAAAX,GAAC,OAAIA,EAAEC,MAAMS,UAAUC,QAAtB,IAGW,SAAAX,GAAC,OAAIA,EAAEC,MAAMC,OAAOU,MAAnB,IACZ,SAAAZ,GAAC,OAAIA,EAAEC,MAAMC,OAAOW,KAAnB,I,mBCnBC,SAASC,IACtB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAQF,EAAaG,IAAI,SAEzBC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAK,OAAEL,QAAF,IAAEA,EAAAA,EAAS,IAElBM,SAAU,YAAgB,IAAbD,EAAY,EAAZA,MACXN,EAAgB,CAAEC,MAAOK,GAC1B,EACDE,iBAAkBC,EAAAA,GAAW,CAC3BH,MAAOG,EAAAA,KACJC,IAAI,EAAG,gCACPC,SAAS,gBAIhB,OACE,UAAChC,EAAD,CAAY4B,SAAUJ,EAAOS,aAA7B,WACE,SAAC/B,EAAD,CAAagC,QAAQ,QAArB,yBACA,SAAC/B,EAAD,CACEgC,GAAG,QACHC,KAAK,QACLC,KAAK,OACLC,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOiB,OAAOd,MACrBe,YAAY,YAEd,UAAClC,EAAD,CAAc6B,KAAK,SAAnB,WACE,SAAC,MAAD,IADF,cAML,C,IC1CKM,EAAW,I,QAAIC,GAEN,SAASC,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAuB7B,EAAAA,EAAAA,MAAhBC,GAAP,eACME,EAAQF,EAAaG,IAAI,SAc/B,OAZA0B,EAAAA,EAAAA,YAAU,WACR,GAAK3B,EAAL,CAIA,IAAM4B,EAAU,mCAAG,oGACEP,EAASQ,YAAY7B,GADvB,OACXyB,EADW,OAEjBC,EAAQD,EAAKK,SAFI,2CAAH,qDAIhBF,GALC,MAFCF,EAAQ,KAQX,GAAE,CAAC5B,EAAcE,KAGhB,UAAC,EAAA+B,SAAD,YACE,SAACC,EAAA,EAAD,CAAWC,UAAU,mBACrB,SAACrC,EAAD,IACC6B,IAAQ,SAACS,EAAA,EAAD,CAASC,MAAOV,MAG9B,C","sources":["components/SearchForm/SerachForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n//form label input button\n\nexport const FormStyled = styled.form`\n  display: flex;\n  gap: 5px;\n  margin: 20px;\n`;\n\nexport const LabelStyled = styled.label`\n  align-self: center;\n`;\n\nexport const InputStyled = styled.input`\n  border: 1px solid ${p => p.theme.colors.main};\n`;\n\nexport const ButtonStyled = styled.button`\n  display: inline-flex;\n  gap: 5px;\n  font-weight: ${p => p.theme.fontWeights.medium};\n  padding: 4px 8px;\n  border-radius: ${p => p.theme.radii.normal};\n  color: ${p => p.theme.colors.black};\n  border: 1px solid ${p => p.theme.colors.main};\n\n  transition: background-color ${p => p.theme.animation.easeFast},\n    color ${p => p.theme.animation.easeFast};\n\n  &:hover {\n    background-color: ${p => p.theme.colors.accent};\n    color: ${p => p.theme.colors.white};\n  }\n`;\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useSearchParams } from 'react-router-dom';\nimport {\n  ButtonStyled,\n  FormStyled,\n  InputStyled,\n  LabelStyled,\n} from './SerachForm.styled';\n\nimport { SlMagnifier } from 'react-icons/sl';\n\nexport default function SearchForm() {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  const formik = useFormik({\n    initialValues: {\n      input: query ?? '',\n    },\n    onSubmit: ({ input }) => {\n      setSearchParams({ query: input });\n    },\n    validationSchema: Yup.object({\n      input: Yup.string()\n        .min(2, 'Must be 2 characters or more')\n        .required('Required'),\n    }),\n  });\n\n  return (\n    <FormStyled onSubmit={formik.handleSubmit}>\n      <LabelStyled htmlFor=\"input\">Film name:</LabelStyled>\n      <InputStyled\n        id=\"input\"\n        name=\"input\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        value={formik.values.input}\n        placeholder=\"Batman\"\n      />\n      <ButtonStyled type=\"submit\">\n        <SlMagnifier />\n        Search\n      </ButtonStyled>\n    </FormStyled>\n  );\n}\n","import Gallery from 'components/Gallery';\nimport PageTitle from 'components/PageTitle';\nimport SearchForm from 'components/SearchForm';\nimport { Suspense, useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport MovieDatabase from 'utils/MovieDatabaseAPI';\n\nconst movieApi = new MovieDatabase();\n\nexport default function Movies() {\n  const [data, setData] = useState(null);\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      setData(null);\n      return;\n    }\n    const findMovies = async () => {\n      const data = await movieApi.searchMovie(query);\n      setData(data.results);\n    };\n    findMovies();\n  }, [searchParams, query]);\n\n  return (\n    <Suspense>\n      <PageTitle titleText=\"Movies search\" />\n      <SearchForm />\n      {data && <Gallery items={data} />}\n    </Suspense>\n  );\n}\n"],"names":["FormStyled","styled","LabelStyled","InputStyled","p","theme","colors","main","ButtonStyled","fontWeights","medium","radii","normal","black","animation","easeFast","accent","white","SearchForm","useSearchParams","searchParams","setSearchParams","query","get","formik","useFormik","initialValues","input","onSubmit","validationSchema","Yup","min","required","handleSubmit","htmlFor","id","name","type","onChange","handleChange","value","values","placeholder","movieApi","MovieDatabase","Movies","useState","data","setData","useEffect","findMovies","searchMovie","results","Suspense","PageTitle","titleText","Gallery","items"],"sourceRoot":""}