{"version":3,"file":"static/js/823.633b8249.chunk.js","mappings":"kNAKe,SAASA,EAAT,GAAwC,IAAD,IAAlBC,UAAAA,OAAkB,MAAN,GAAM,EAC9CC,GAAQC,EAAAA,EAAAA,MACd,OACE,SAACC,EAAA,EAAD,CACEC,gBAAiBH,EAAMI,OAAOC,KAC9BC,WAAW,SACXC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,aAAc,SANhB,UAQE,SAACR,EAAA,EAAD,CAAKS,GAAG,KAAR,SAAcZ,KAGnB,C,+JCjBYa,EAAaC,EAAAA,GAAAA,KAAH,wEAMVC,EAAcD,EAAAA,GAAAA,MAAH,+CAIXE,EAAcF,EAAAA,GAAAA,MAAH,kDACF,SAAAG,GAAC,OAAIA,EAAEhB,MAAMI,OAAOC,IAAnB,IAGVY,EAAeJ,EAAAA,GAAAA,OAAH,8VAKV,SAAAG,GAAC,OAAIA,EAAEhB,MAAMkB,UAAUC,CAAtB,IACC,SAAAH,GAAC,OAAIA,EAAEhB,MAAMoB,YAAYC,MAAxB,IAEC,SAAAL,GAAC,OAAIA,EAAEhB,MAAMsB,MAAMC,MAAlB,IACT,SAAAP,GAAC,OAAIA,EAAEhB,MAAMI,OAAOoB,KAAnB,IACU,SAAAR,GAAC,OAAIA,EAAEhB,MAAMI,OAAOC,IAAnB,IAEU,SAAAW,GAAC,OAAIA,EAAEhB,MAAMyB,UAAUC,QAAtB,IACtB,SAAAV,GAAC,OAAIA,EAAEhB,MAAMyB,UAAUC,QAAtB,IAGW,SAAAV,GAAC,OAAIA,EAAEhB,MAAMI,OAAOuB,MAAnB,IACZ,SAAAX,GAAC,OAAIA,EAAEhB,MAAMI,OAAOwB,KAAnB,G,4NC/BDC,EAAqBhB,EAAAA,GAAAA,IAAH,2kBA+BlBiB,EAAqBjB,EAAAA,GAAAA,IAAH,uNAalBkB,EAAclB,EAAAA,GAAAA,IAAH,wCAIXmB,EAAqBnB,EAAAA,GAAAA,IAAH,2PAelBoB,EAAapB,EAAAA,GAAAA,EAAH,4CAIVqB,EAAYrB,EAAAA,GAAAA,GAAH,2HAQTsB,EAAkBtB,EAAAA,GAAAA,GAAH,0CAIfuB,EAAiBvB,EAAAA,GAAAA,GAAH,mEAIdwB,EAAiBxB,EAAAA,GAAAA,GAAH,8EAMdyB,EAAazB,EAAAA,GAAAA,KAAH,kLAEZ,SAAAG,GAAC,OAAIA,EAAEhB,MAAMI,OAAOwB,KAAnB,IAEU,SAAAZ,GAAC,OAAIA,EAAEhB,MAAMI,OAAOuB,MAAnB,IAKVY,EAAO1B,EAAAA,GAAAA,KAAH,kKAGK,SAAAG,GAAC,OAAIA,EAAEhB,MAAMI,OAAOC,IAAnB,I,SCtFR,SAASmC,EAAT,GAAsC,IAAVC,EAAS,EAATA,MAEvCC,EAQED,EARFC,YACAC,EAOEF,EAPFE,MACAC,EAMEH,EANFG,aACAC,EAKEJ,EALFI,WACAC,EAIEL,EAJFK,WACAC,EAGEN,EAHFM,eACAC,EAEEP,EAFFO,OACAC,EACER,EADFQ,SAEF,OACE,UAACpB,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CACEmB,IACIR,EACE,kCAAoCA,EACpC,8FAENS,IAAKR,OAGT,UAACX,EAAD,YACE,SAACC,EAAD,UAAaU,KACb,UAACT,EAAD,YACE,yBACE,UAACC,EAAD,YACE,SAACC,EAAD,4BACA,UAACC,EAAD,YACE,SAACC,EAAD,UAAaM,EAAaQ,QAAQ,KADpC,KAEE,SAACb,EAAD,UAAOM,aAIb,yBACE,UAACV,EAAD,YACE,SAACC,EAAD,0BACA,SAACC,EAAD,UAAiBS,UAGrB,yBACE,UAACX,EAAD,YACE,SAACC,EAAD,8BACA,SAACC,EAAD,UAAiBU,UAGrB,yBACE,UAACZ,EAAD,YACE,SAACC,EAAD,qBACA,SAACC,EAAD,UACGW,EACEK,MAAM,EAAG,GACTC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,IAAT,IACRC,KAAK,iBAKhB,UAACvD,EAAA,EAAD,YACE,SAACA,EAAA,EAAD,CAAKS,GAAG,IAAI+C,aAAa,OAAOC,SAAS,OAAzC,oBAGA,SAACzD,EAAA,EAAD,CAAKS,GAAG,IAAIiD,WAAW,MAAvB,SACGX,YAMZ,C,oBCpFYY,EAAOhD,EAAAA,GAAAA,GAAH,wDAOJiD,GAFWjD,EAAAA,GAAAA,GAAH,uBAEKA,EAAAA,EAAAA,IAAOkD,EAAAA,GAAPlD,CAAH,+QACN,SAAAG,GAAC,OAAIA,EAAEhB,MAAMoB,YAAYC,MAAxB,IAEC,SAAAL,GAAC,OAAIA,EAAEhB,MAAMsB,MAAMC,MAAlB,IACT,SAAAP,GAAC,OAAIA,EAAEhB,MAAMI,OAAOoB,KAAnB,IAEqB,SAAAR,GAAC,OAAIA,EAAEhB,MAAMyB,UAAUC,QAAtB,IAGrB,SAAAV,GAAC,OAAIA,EAAEhB,MAAMI,OAAOwB,KAAnB,IACU,SAAAZ,GAAC,OAAIA,EAAEhB,MAAMI,OAAOuB,MAAnB,IAID,SAAAX,GAAC,OAAIA,EAAEhB,MAAMI,OAAOC,IAAnB,KCnBV,SAAS2D,EAAT,GAAkD,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAK9CC,GAJaC,EAAAA,EAAAA,MAETC,SAEgBC,MAAM,KAG9B,OAFAH,EAAWA,EAASA,EAASI,OAAS,GAAGC,eAGvC,SAACX,EAAD,UACGI,EAASX,KAAI,gBAAGmB,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACZ,yBACE,SAACZ,EAAD,CACEa,GAAIF,EACJG,MAAO,CAAEC,KAAMX,GACfY,UAAWX,IAAaO,EAAKF,cAAgB,SAAW,GAH1D,SAKGE,KANIA,EADG,KAanB,CClBD,IAAMK,EAAW,IAAIC,EAAAA,EAEff,EAAW,CACf,CAAEQ,KAAM,OAAQC,KAAM,QACtB,CAAED,KAAM,UAAWC,KAAM,WACzB,CAAED,KAAM,WAAYC,KAAM,aAGb,SAASO,IAAgB,IAAD,IAC/BC,GAAWd,EAAAA,EAAAA,MACXe,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAY,oBAAGR,EAASN,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAE7Cc,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,oGACIb,EAASa,SAASP,GADtB,OACTG,EADS,OAEfC,EAAQD,GAFO,2CAAH,qDAIdI,GACD,GAAE,CAACP,IAMJ,GAAKG,EAEL,OACE,UAACtF,EAAA,EAAD,CAAK2F,QAAQ,OAAb,WACE,SAAC/F,EAAA,EAAD,CAAWC,UAAU,mBAErB,UAAC,KAAD,CAAc+F,KAAK,SAASC,QAVN,WACxBZ,EAASO,EAAc,CAAEM,SAAS,GACnC,EAQG,WACE,SAAC,MAAD,IADF,cAKA,SAACxD,EAAD,CAAkBC,MAAO+C,KAEzB,SAACxB,EAAD,CAAiBC,SAAUA,EAAUC,SAAUwB,KAE/C,SAAC,KAAD,MAGL,C","sources":["components/PageTitle/PageTitle.jsx","components/SearchForm/SerachForm.styled.js","components/MovieDescription/MovieDescription.styled.js","components/MovieDescription/MovieDescription.jsx","components/MovieDetailsBar/MovieDetailsBar.styled.js","components/MovieDetailsBar/MovieDetailsBar.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import Box from 'components/Box';\nimport React from 'react';\nimport { useTheme } from 'styled-components';\nimport PropTypes from 'prop-types';\n\nexport default function PageTitle({ titleText = '' }) {\n  const theme = useTheme();\n  return (\n    <Box\n      backgroundColor={theme.colors.main}\n      alignItems=\"center\"\n      pt={2}\n      pb={2}\n      mt={4}\n      borderRadius={'normal'}\n    >\n      <Box as=\"h2\">{titleText}</Box>\n    </Box>\n  );\n}\n\nPageTitle.propTypes = { titleText: PropTypes.string };\n","import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  gap: 5px;\n  margin: 20px;\n`;\n\nexport const LabelStyled = styled.label`\n  align-self: center;\n`;\n\nexport const InputStyled = styled.input`\n  border: 1px solid ${p => p.theme.colors.main};\n`;\n\nexport const ButtonStyled = styled.button`\n  display: inline-flex;\n  width: fit-content;\n  gap: 5px;\n  cursor: pointer;\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  padding: 4px 8px;\n  border-radius: ${p => p.theme.radii.normal};\n  color: ${p => p.theme.colors.black};\n  border: 1px solid ${p => p.theme.colors.main};\n\n  transition: background-color ${p => p.theme.animation.easeFast},\n    color ${p => p.theme.animation.easeFast};\n\n  &:hover {\n    background-color: ${p => p.theme.colors.accent};\n    color: ${p => p.theme.colors.white};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const FilmDescrContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: $main;\n  padding: 40px 20px;\n  gap: 20px;\n  font-weight: 500;\n  background-color: white;\n  position: relative;\n  min-width: 320px;\n  width: 100%;\n  max-width: 420px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 70px;\n    align-items: flex-start;\n    padding: 20px 60px 40px 40px;\n\n    width: 700px;\n    max-width: none;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 1000px;\n    gap: 30px;\n    padding: 20px 10px;\n  }\n`;\n\nexport const ImageWrapperStyled = styled.div`\n  border-radius: 5px;\n  overflow: hidden;\n\n  @media screen and (min-width: 768px) {\n    flex-basis: 265px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    flex-basis: 375px;\n  }\n`;\n\nexport const ImageStyled = styled.img`\n  width: 100%;\n`;\n\nexport const DescrWrapperStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  min-width: 240px;\n\n  @media screen and (min-width: 768px) {\n    flex-basis: 400px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    flex-basis: 500px;\n  }\n`;\n\nexport const DescrTitle = styled.p`\n  font-size: 24px;\n`;\n\nexport const DescrList = styled.ul`\n  display: flex;\n  gap: 8px;\n  flex-direction: column;\n  list-style: none;\n  font-size: 18px;\n`;\n\nexport const DescrListValues = styled.ul`\n  display: flex;\n`;\n\nexport const DescrListTitle = styled.li`\n  width: 50%;\n  color: $text-modal-card;\n`;\nexport const DescrListValue = styled.li`\n  display: flex;\n  width: 50%;\n  line-height: 1.3;\n`;\n\nexport const VoteAccent = styled.span`\n  text-align: center;\n  color: ${p => p.theme.colors.white};\n  border-radius: 5px;\n  background-color: ${p => p.theme.colors.accent};\n  margin-right: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n`;\nexport const Vote = styled.span`\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${p => p.theme.colors.main};\n  margin-left: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n`;\n","import Box from 'components/Box';\nimport React from 'react';\nimport {\n  DescrList,\n  DescrListTitle,\n  DescrListValue,\n  DescrListValues,\n  DescrTitle,\n  DescrWrapperStyled,\n  FilmDescrContainer,\n  ImageStyled,\n  ImageWrapperStyled,\n  Vote,\n  VoteAccent,\n} from './MovieDescription.styled';\nimport PropTypes from 'prop-types';\n\nexport default function MovieDescription({ movie }) {\n  const {\n    poster_path,\n    title,\n    vote_average,\n    vote_count,\n    popularity,\n    original_title,\n    genres,\n    overview,\n  } = movie;\n  return (\n    <FilmDescrContainer>\n      <ImageWrapperStyled>\n        <ImageStyled\n          src={\n            !!poster_path\n              ? 'https://image.tmdb.org/t/p/w780' + poster_path\n              : 'https://cdn.create.vista.com/api/media/small/324908572/stock-vector-3d-cinema-film-strip-in'\n          }\n          alt={title}\n        />\n      </ImageWrapperStyled>\n      <DescrWrapperStyled>\n        <DescrTitle>{title}</DescrTitle>\n        <DescrList>\n          <li>\n            <DescrListValues>\n              <DescrListTitle>Vote / Votes</DescrListTitle>\n              <DescrListValue>\n                <VoteAccent>{vote_average.toFixed(1)}</VoteAccent>/\n                <Vote>{vote_count}</Vote>\n              </DescrListValue>\n            </DescrListValues>\n          </li>\n          <li>\n            <DescrListValues>\n              <DescrListTitle>Popularity</DescrListTitle>\n              <DescrListValue>{popularity}</DescrListValue>\n            </DescrListValues>\n          </li>\n          <li>\n            <DescrListValues>\n              <DescrListTitle>Original Title</DescrListTitle>\n              <DescrListValue>{original_title}</DescrListValue>\n            </DescrListValues>\n          </li>\n          <li>\n            <DescrListValues>\n              <DescrListTitle>Genre</DescrListTitle>\n              <DescrListValue>\n                {genres\n                  .slice(0, 3)\n                  .map(elem => elem.name)\n                  .join(', ')}\n              </DescrListValue>\n            </DescrListValues>\n          </li>\n        </DescrList>\n        <Box>\n          <Box as=\"p\" marginBottom=\"10px\" fontSize=\"20px\">\n            About\n          </Box>\n          <Box as=\"p\" lineHeight=\"1.5\">\n            {overview}\n          </Box>\n        </Box>\n      </DescrWrapperStyled>\n    </FilmDescrContainer>\n  );\n}\n\nMovieDescription.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    vote_average: PropTypes.number,\n    vote_count: PropTypes.number,\n    popularity: PropTypes.number,\n    original_title: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      })\n    ),\n    overview: PropTypes.string,\n  }),\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const ListItem = styled.li``;\n\nexport const LinkStyled = styled(Link)`\n  font-weight: ${p => p.theme.fontWeights.medium};\n  padding: 8px 16px;\n  border-radius: ${p => p.theme.radii.normal};\n  color: ${p => p.theme.colors.black};\n\n  transition: background-color ${p => p.theme.animation.easeFast};\n\n  &.active {\n    color: ${p => p.theme.colors.white};\n    background-color: ${p => p.theme.colors.accent};\n  }\n\n  &:hover:not(.active) {\n    background-color: ${p => p.theme.colors.main};\n  }\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { LinkStyled, List } from './MovieDetailsBar.styled';\nimport PropTypes from 'prop-types';\n\nexport default function MovieDetailsBar({ navItems, backLink }) {\n  const location = useLocation();\n\n  const { pathname } = location;\n\n  let currPage = pathname.split('/');\n  currPage = currPage[currPage.length - 1].toLowerCase();\n\n  return (\n    <List>\n      {navItems.map(({ href, text }) => (\n        <li key={text}>\n          <LinkStyled\n            to={href}\n            state={{ from: backLink }}\n            className={currPage === text.toLowerCase() ? 'active' : ''}\n          >\n            {text}\n          </LinkStyled>\n        </li>\n      ))}\n    </List>\n  );\n}\n\nMovieDetailsBar.propTypes = {\n  navItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      href: PropTypes.string,\n      text: PropTypes.string,\n    })\n  ),\n  backLink: PropTypes.object,\n};\n","import { useEffect, useState } from 'react';\nimport { Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport MovieDatabase from 'utils/MovieDatabaseAPI';\nimport { BiArrowBack } from 'react-icons/bi';\nimport Box from 'components/Box';\nimport PageTitle from 'components/PageTitle';\nimport { ButtonStyled } from 'components/SearchForm/SerachForm.styled';\nimport MovieDescription from 'components/MovieDescription';\nimport MovieDetailsBar from 'components/MovieDetailsBar';\n\nconst movieApi = new MovieDatabase();\n\nconst navItems = [\n  { href: 'cast', text: 'Cast' },\n  { href: 'reviews', text: 'Reviews' },\n  { href: 'trailers', text: 'Trailers' },\n];\n\nexport default function MovieDetails() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { movieId } = useParams();\n  const [data, setData] = useState(null);\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const getMovie = async () => {\n      const data = await movieApi.getMovie(movieId);\n      setData(data);\n    };\n    getMovie();\n  }, [movieId]);\n\n  const onButtonBackClick = () => {\n    navigate(backLinkHref, { replace: true });\n  };\n\n  if (!data) return;\n\n  return (\n    <Box gridGap=\"10px\">\n      <PageTitle titleText=\"Movie details\" />\n\n      <ButtonStyled type=\"button\" onClick={onButtonBackClick}>\n        <BiArrowBack />\n        Go back\n      </ButtonStyled>\n\n      <MovieDescription movie={data} />\n\n      <MovieDetailsBar navItems={navItems} backLink={backLinkHref} />\n\n      <Outlet />\n    </Box>\n  );\n}\n"],"names":["PageTitle","titleText","theme","useTheme","Box","backgroundColor","colors","main","alignItems","pt","pb","mt","borderRadius","as","FormStyled","styled","LabelStyled","InputStyled","p","ButtonStyled","fontSizes","m","fontWeights","medium","radii","normal","black","animation","easeFast","accent","white","FilmDescrContainer","ImageWrapperStyled","ImageStyled","DescrWrapperStyled","DescrTitle","DescrList","DescrListValues","DescrListTitle","DescrListValue","VoteAccent","Vote","MovieDescription","movie","poster_path","title","vote_average","vote_count","popularity","original_title","genres","overview","src","alt","toFixed","slice","map","elem","name","join","marginBottom","fontSize","lineHeight","List","LinkStyled","Link","MovieDetailsBar","navItems","backLink","currPage","useLocation","pathname","split","length","toLowerCase","href","text","to","state","from","className","movieApi","MovieDatabase","MovieDetails","location","navigate","useNavigate","movieId","useParams","useState","data","setData","backLinkHref","useEffect","getMovie","gridGap","type","onClick","replace"],"sourceRoot":""}