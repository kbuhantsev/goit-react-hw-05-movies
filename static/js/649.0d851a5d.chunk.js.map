{"version":3,"file":"static/js/649.0d851a5d.chunk.js","mappings":"wOAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,4DAKVE,EAAkBF,EAAAA,GAAAA,GAAH,oLAUfG,EAAkBH,EAAAA,GAAAA,GAAH,8iBAQF,SAAAI,GAAC,OAAIA,EAAEC,MAAMC,UAAUC,QAAtB,IAgBdC,EAAYR,EAAAA,GAAAA,IAAH,uNAaTS,EAAkBT,EAAAA,GAAAA,GAAH,2DAKfU,EAAmBV,EAAAA,GAAAA,EAAH,6GAClB,SAAAI,GAAC,OAAIA,EAAEC,MAAMM,OAAOC,KAAnB,IACK,SAAAR,GAAC,OAAIA,EAAEC,MAAMQ,YAAYC,MAAxB,IACH,SAAAV,GAAC,OAAIA,EAAEC,MAAMU,UAAUC,CAAtB,IAIHC,EAAmBjB,EAAAA,GAAAA,EAAH,4DAClB,SAAAI,GAAC,OAAIA,EAAEC,MAAMM,OAAOO,MAAnB,IACK,SAAAd,GAAC,OAAIA,EAAEC,MAAMQ,YAAYC,MAAxB,I,mBCvDH,SAASK,EAAT,GAA6B,IAAVC,EAAS,EAATA,MAC1BC,GAAWC,EAAAA,EAAAA,MAEXC,EAAU,SAAAC,GACdA,EAAMC,OAAOC,IAAMC,EACnBH,EAAMC,OAAOG,MAAMC,OAAS,OAC7B,EAED,OACE,SAAC3B,EAAD,UACGkB,EAAMU,KAAI,gBAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAcC,EAA9B,EAA8BA,OAAQC,EAAtC,EAAsCA,GAAIC,EAA1C,EAA0CA,MAA1C,OACT,SAAChC,EAAD,WACE,UAACJ,EAAD,CAAYqC,GAAI,WAAaF,EAAIG,MAAO,CAAEC,KAAMjB,GAAhD,WACE,SAACb,EAAD,CACEkB,IACIK,EACE,mCAAqCA,EACrC,IAENQ,UAAU,iBACVC,IAAOT,EAAcI,EAAQ,SAC7BM,QAAQ,OACRC,MAAM,MACNnB,QAASA,KAEX,UAACd,EAAD,YACE,yBACE,SAACC,EAAD,UAAmByB,OAErB,yBACE,UAAClB,EAAD,WACGgB,EACEU,MAAM,EAAG,GACTb,KAAI,SAAAc,GAAI,OAAIA,EAAKC,IAAT,IACRC,KAAK,MAJV,OAMGd,EAAaW,MAAM,EAAG,eAzBXT,EADb,KAmChB,C,kGCtDc,SAASa,EAAT,GAAwC,IAAD,IAAlBC,UAAAA,OAAkB,MAAN,GAAM,EAC9C3C,GAAQ4C,EAAAA,EAAAA,MACd,OACE,SAACC,EAAA,EAAD,CACEC,gBAAiB9C,EAAMM,OAAOyC,KAC9BC,WAAW,SACXC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,aAAc,SANhB,UAQE,SAACP,EAAA,EAAD,CAAKQ,GAAG,KAAR,SAAcV,KAGnB,C,2GCdc,SAASW,EAAT,GAIX,IAHFC,EAGC,EAHDA,WACAC,EAEC,EAFDA,YACAC,EACC,EADDA,kBAEMC,GAAMC,EAAAA,EAAAA,QAAO,MAkBnB,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,IAAIC,IAAJ,CAAeJ,EAAIK,QAAS,CAC3CR,WAAYA,EACZS,aAAc,GACdC,aAAc,IAEhBJ,EAASK,WAAWV,GACpBK,EAASM,GAAG,cAAc,YAAe,IAAZC,EAAW,EAAXA,KAC3BX,EAAkBW,GAClBC,OAAOC,SAAS,CACdC,IAAK,IACLC,SAAU,UAEb,GACF,GAAE,CAAChB,EAAaD,EAAYE,KAG3B,gBACEgB,IAAKf,EACL7B,GAAG,2BACHK,UAAU,kBAGf,C,+JCjCYwC,EAAa/E,EAAAA,GAAAA,KAAH,wEAMVgF,EAAchF,EAAAA,GAAAA,MAAH,+CAIXiF,EAAcjF,EAAAA,GAAAA,MAAH,kDACF,SAAAI,GAAC,OAAIA,EAAEC,MAAMM,OAAOyC,IAAnB,IAGV8B,EAAelF,EAAAA,GAAAA,OAAH,8VAKV,SAAAI,GAAC,OAAIA,EAAEC,MAAMU,UAAUC,CAAtB,IACC,SAAAZ,GAAC,OAAIA,EAAEC,MAAMQ,YAAYC,MAAxB,IAEC,SAAAV,GAAC,OAAIA,EAAEC,MAAM8E,MAAMC,MAAlB,IACT,SAAAhF,GAAC,OAAIA,EAAEC,MAAMM,OAAOC,KAAnB,IACU,SAAAR,GAAC,OAAIA,EAAEC,MAAMM,OAAOyC,IAAnB,IAEU,SAAAhD,GAAC,OAAIA,EAAEC,MAAMC,UAAUC,QAAtB,IACtB,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,UAAUC,QAAtB,IAGW,SAAAH,GAAC,OAAIA,EAAEC,MAAMM,OAAOO,MAAnB,IACZ,SAAAd,GAAC,OAAIA,EAAEC,MAAMM,OAAO0E,KAAnB,G,yIC5BRC,EAAU,mCAID,SAASC,IAAgC,IAAlBC,EAAiB,uDAAV,SAC3C,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwBL,EAAAA,EAAAA,UAAS,MAAjC,eAAOM,EAAP,KAAaC,EAAb,KAEM/D,GAASgE,EAAAA,EAAAA,UAAO,iBAAC,oGACAC,EAAAA,GAAAA,IAAU,oBAAqB,CAClDC,OAAQ,CACNC,QAASd,KAHQ,cACfe,EADe,yBAOdA,EAAON,KAAK9D,QAPE,2CAQpB,IAEGqE,GAAUC,EAAAA,EAAAA,aAAW,mCACzB,WAAM9B,GAAN,4EACe,WAATe,EADN,iCAEyBU,EAAAA,GAAAA,IAAU,uBAAwB,CACrDC,OAAQ,CACNC,QAASd,EACTb,KAAAA,KALR,YAEU4B,EAFV,qCASMG,EATN,KASmBH,EAAON,KAT1B,SASsC9D,EATtC,uCAUM+D,EAAQK,EAAON,MAVrB,mCAYsB,gBAATP,EAZb,oBAaSE,EAbT,oEAcyBQ,EAAAA,GAAAA,IAAU,gBAAiB,CAC9CC,OAAQ,CACNC,QAASd,EACTb,KAAAA,EACAiB,MAAAA,KAlBR,aAcUW,EAdV,qCAsBMG,EAtBN,KAsBmBH,EAAON,KAtB1B,UAsBsC9D,EAtBtC,wCAuBM+D,EAAQK,EAAON,MAvBrB,4CADyB,sDA4BzB,CAACL,EAAOzD,EAAQuD,IAGZiB,GAAaF,EAAAA,EAAAA,aAAW,mCAC5B,WAAMG,GAAN,yFACQJ,EAAQI,GADhB,OAGQC,EAAY,CAAElC,KAAMiC,IAEpBhB,EAAQG,EAAae,IAAI,YAE7BD,EAAUjB,MAAQA,GAGpBI,EAAgBa,GAVlB,2CAD4B,sDAc5B,CAACL,EAASR,KAGZ7B,EAAAA,EAAAA,YAAU,YACR,iBAAC,8FACOqC,EAAQT,EAAae,IAAI,SAAW,GAD3C,0CAAD,EAID,GAAE,CAACf,IAEJ,IAAMW,EAAe,SAACT,EAAM9D,GAC1B,GAAKA,EAAL,CADqC,gBAGlB8D,EAAKc,SAHa,IAGrC,2BAAiC,CAAC,IAAvBC,EAAsB,QAC/BA,EAAK7E,OAAS,GADiB,gBAET6E,EAAKC,WAFI,yBAEpBC,EAFoB,QAGvBC,EAAQhF,EAAOiF,MAAK,SAAAC,GAAO,OAAIA,EAAQjF,KAAO8E,CAAnB,IACjCF,EAAK7E,OAAOmF,KAAK,CAAElF,GAAI+E,EAAM/E,GAAIW,KAAMoE,EAAMpE,MAJhB,EAE/B,2BAAuC,GAFR,+BAMhC,CAToC,+BAClB,CASpB,EAED,MAAO,CAAEkD,KAAAA,EAAMU,WAAAA,EAAYd,SAAAA,EAC5B,CArFDO,EAAAA,GAAAA,SAAAA,QAAyB,+B,wMCMV,SAASmB,IACtB,OAAwCzB,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMJ,EAAQG,EAAae,IAAI,SAEzBU,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAK,OAAE/B,QAAF,IAAEA,EAAAA,EAAS,IAElBgC,SAAU,YAAgB,IAAbD,EAAY,EAAZA,MACX3B,EAAgB,CAAEJ,MAAO+B,GAC1B,EACDE,iBAAkBC,EAAAA,GAAW,CAC3BH,MAAOG,EAAAA,KACJC,IAAI,EAAG,gCACPC,SAAS,gBAIhB,OACE,UAAC,KAAD,CAAYJ,SAAUJ,EAAOS,aAA7B,WACE,SAAC,KAAD,CAAaC,QAAQ,QAArB,yBACA,SAAC,KAAD,CACE9F,GAAG,QACHW,KAAK,QACLoF,KAAK,OACLC,SAAUZ,EAAOa,aACjBC,MAAOd,EAAOe,OAAOZ,MACrBa,YAAY,YAEd,UAAC,KAAD,CAAcL,KAAK,SAAnB,WACE,SAAC,MAAD,IADF,cAML,CCzCc,SAASM,IACtB,OAAuChD,EAAAA,EAAAA,GAAc,eAA7CQ,EAAR,EAAQA,KAAMU,EAAd,EAAcA,WAAYd,EAA1B,EAA0BA,SAC1B,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eAOQH,GALOO,EAAAA,EAAAA,UACb,kBAAMuC,OAAOC,aAAP,OAAuB5C,GAA7B,GACA,CAACA,IAGKH,MAYR,OAVAzB,EAAAA,EAAAA,YAAU,WAKR0B,EAJKD,GACM,KAIZ,GAAE,CAACA,EAAOC,EAAUE,IAErB6C,QAAQC,IAAI5C,IAGV,iCACE,SAAChD,EAAA,EAAD,CAAWC,UAAU,mBACrB,SAACqE,EAAD,IACCtB,IACC,iCACE,SAAC5E,EAAA,EAAD,CAASC,MAAO2E,EAAKc,WACrB,SAAClD,EAAA,EAAD,CACEC,WAAYmC,EAAK6C,cACjB/E,YAAW,OAAEkC,QAAF,IAAEA,OAAF,EAAEA,EAAMtB,KACnBX,kBAAmB2C,SAM9B,C","sources":["components/Gallery/Gallery.styled.js","components/Gallery/Gallery.jsx","components/PageTitle/PageTitle.jsx","components/Pagination/Pagination.jsx","components/SearchForm/SerachForm.styled.js","components/hooks/useThemoviedb.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: block;\n  height: 100%;\n`;\n\nexport const GalleryUlStyled = styled.ul`\n  display: flex;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  row-gap: 20px;\n  column-gap: 20px;\n  padding-top: 20px;\n  padding-bottom: 40px;\n`;\n\nexport const GalleryLiStyled = styled.li`\n  display: flex;\n  flex-direction: column;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  border-radius: 5px;\n  overflow: hidden;\n  flex-basis: 280px;\n  transition: transform ${p => p.theme.animation.easeFast};\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 20px * 2) / 3);\n  }\n\n  @media screen and (min-width: 1280px) {\n    flex-basis: calc((100% - 20px * 3) / 4);\n  }\n\n  &:hover {\n    transform: scale(1.02);\n    cursor: pointer;\n  }\n`;\n\nexport const ImgStyled = styled.img`\n  width: 100%;\n  /* height: 400px; */\n\n  @media screen and (min-width: 768px) {\n    /* height: 450px; */\n  }\n\n  @media screen and (min-width: 1280px) {\n    /* height: 575px; */\n  }\n`;\n\nexport const DescrListStyled = styled.ul`\n  padding: 10px 5px;\n  gap: 5px;\n`;\n\nexport const DescrTitleStyled = styled.p`\n  color: ${p => p.theme.colors.black};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${p => p.theme.fontSizes.m};\n  text-transform: uppercase;\n`;\n\nexport const DescrGenreStyled = styled.p`\n  color: ${p => p.theme.colors.accent};\n  font-weight: ${p => p.theme.fontWeights.medium};\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  StyledLink,\n  GalleryUlStyled,\n  GalleryLiStyled,\n  ImgStyled,\n  DescrListStyled,\n  DescrTitleStyled,\n  DescrGenreStyled,\n} from './Gallery.styled';\nimport plaseholderImg from '../../images/empty.png';\nimport PropTypes from 'prop-types';\n\nexport default function Gallery({ items }) {\n  const location = useLocation();\n\n  const onError = event => {\n    event.target.src = plaseholderImg;\n    event.target.style.height = '400px';\n  };\n\n  return (\n    <GalleryUlStyled>\n      {items.map(({ poster_path, release_date, genres, id, title }) => (\n        <GalleryLiStyled key={id}>\n          <StyledLink to={'/movies/' + id} state={{ from: location }}>\n            <ImgStyled\n              src={\n                !!poster_path\n                  ? 'https://image.tmdb.org/t/p/w780/' + poster_path\n                  : '#'\n              }\n              className=\"gallery__image\"\n              alt={!!poster_path ? title : 'broken'}\n              loading=\"lazy\"\n              width=\"280\"\n              onError={onError}\n            />\n            <DescrListStyled>\n              <li>\n                <DescrTitleStyled>{title}</DescrTitleStyled>\n              </li>\n              <li>\n                <DescrGenreStyled>\n                  {genres\n                    .slice(0, 3)\n                    .map(elem => elem.name)\n                    .join(', ')}\n                  &nbsp;\n                  {release_date.slice(0, 4)}\n                </DescrGenreStyled>\n              </li>\n            </DescrListStyled>\n          </StyledLink>\n        </GalleryLiStyled>\n      ))}\n    </GalleryUlStyled>\n  );\n}\n\nGallery.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      poster_path: PropTypes.string,\n      release_date: PropTypes.string,\n      genres: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.number,\n          name: PropTypes.string,\n        })\n      ),\n      id: PropTypes.number,\n      title: PropTypes.string,\n    })\n  ),\n};\n","import Box from 'components/Box';\nimport React from 'react';\nimport { useTheme } from 'styled-components';\nimport PropTypes from 'prop-types';\n\nexport default function PageTitle({ titleText = '' }) {\n  const theme = useTheme();\n  return (\n    <Box\n      backgroundColor={theme.colors.main}\n      alignItems=\"center\"\n      pt={2}\n      pb={2}\n      mt={4}\n      borderRadius={'normal'}\n    >\n      <Box as=\"h2\">{titleText}</Box>\n    </Box>\n  );\n}\n\nPageTitle.propTypes = { titleText: PropTypes.string };\n","import { useEffect, useRef } from 'react';\nimport pagination from 'tui-pagination';\nimport 'tui-pagination/dist/tui-pagination.css';\nimport PropTypes from 'prop-types';\n\nexport default function Pagination({\n  totalItems,\n  currentPage,\n  updateCurrentPage,\n}) {\n  const $el = useRef(null);\n\n  useEffect(() => {\n    const paginate = new pagination($el.current, {\n      totalItems: totalItems,\n      itemsPerPage: 20,\n      visiblePages: 5,\n    });\n    paginate.movePageTo(currentPage);\n    paginate.on('beforeMove', ({ page }) => {\n      updateCurrentPage(page);\n      window.scrollTo({\n        top: 100,\n        behavior: 'smooth',\n      });\n    });\n  }, [currentPage, totalItems, updateCurrentPage]);\n\n  return (\n    <div\n      ref={$el}\n      id=\"tui-pagination-container\"\n      className=\"tui-pagination\"\n    ></div>\n  );\n}\n\nPagination.propTypes = {\n  totalItems: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  updateCurrentPage: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  gap: 5px;\n  margin: 20px;\n`;\n\nexport const LabelStyled = styled.label`\n  align-self: center;\n`;\n\nexport const InputStyled = styled.input`\n  border: 1px solid ${p => p.theme.colors.main};\n`;\n\nexport const ButtonStyled = styled.button`\n  display: inline-flex;\n  width: fit-content;\n  gap: 5px;\n  cursor: pointer;\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  padding: 4px 8px;\n  border-radius: ${p => p.theme.radii.normal};\n  color: ${p => p.theme.colors.black};\n  border: 1px solid ${p => p.theme.colors.main};\n\n  transition: background-color ${p => p.theme.animation.easeFast},\n    color ${p => p.theme.animation.easeFast};\n\n  &:hover {\n    background-color: ${p => p.theme.colors.accent};\n    color: ${p => p.theme.colors.white};\n  }\n`;\n","import { useMemo, useState, useCallback, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport axios from 'axios';\n\nconst API_KEY = '99eb21030dfb3afeff4792ddc8f57a63';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport default function useThemoviedb(mode = 'trends') {\n  const [query, setQuery] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [data, setData] = useState(null);\n\n  const genres = useMemo(async () => {\n    const result = await axios.get('/genre/movie/list', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    return result.data.genres;\n  }, []);\n\n  const getData = useCallback(\n    async page => {\n      if (mode === 'trends') {\n        const result = await axios.get('/trending/movie/week', {\n          params: {\n            api_key: API_KEY,\n            page,\n          },\n        });\n        if (result) {\n          updateGenres(result.data, await genres);\n          setData(result.data);\n        }\n      } else if (mode === 'searchMovie') {\n        if (!query) return;\n        const result = await axios.get('/search/movie', {\n          params: {\n            api_key: API_KEY,\n            page,\n            query,\n          },\n        });\n        if (result) {\n          updateGenres(result.data, await genres);\n          setData(result.data);\n        }\n      }\n    },\n    [query, genres, mode]\n  );\n\n  const handlePage = useCallback(\n    async newPage => {\n      await getData(newPage);\n\n      const paramsObj = { page: newPage };\n\n      const query = searchParams.get('query');\n      if (query) {\n        paramsObj.query = query;\n      }\n\n      setSearchParams(paramsObj);\n    },\n    // eslint-disable-next-line\n    [getData, setSearchParams]\n  );\n\n  useEffect(() => {\n    (async () => {\n      await getData(searchParams.get('page') || 1);\n    })();\n    // eslint-disable-next-line\n  }, [searchParams]);\n\n  const updateGenres = (data, genres) => {\n    if (!genres) return;\n\n    for (const film of data.results) {\n      film.genres = [];\n      for (const genreId of film.genre_ids) {\n        const genre = genres.find(element => element.id === genreId);\n        film.genres.push({ id: genre.id, name: genre.name });\n      }\n    }\n  };\n\n  return { data, handlePage, setQuery };\n}\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useSearchParams } from 'react-router-dom';\nimport {\n  ButtonStyled,\n  FormStyled,\n  InputStyled,\n  LabelStyled,\n} from './SerachForm.styled';\n\nimport { SlMagnifier } from 'react-icons/sl';\n\nexport default function SearchForm() {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  const formik = useFormik({\n    initialValues: {\n      input: query ?? '',\n    },\n    onSubmit: ({ input }) => {\n      setSearchParams({ query: input });\n    },\n    validationSchema: Yup.object({\n      input: Yup.string()\n        .min(2, 'Must be 2 characters or more')\n        .required('Required'),\n    }),\n  });\n\n  return (\n    <FormStyled onSubmit={formik.handleSubmit}>\n      <LabelStyled htmlFor=\"input\">Film name:</LabelStyled>\n      <InputStyled\n        id=\"input\"\n        name=\"input\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        value={formik.values.input}\n        placeholder=\"Batman\"\n      />\n      <ButtonStyled type=\"submit\">\n        <SlMagnifier />\n        Search\n      </ButtonStyled>\n    </FormStyled>\n  );\n}\n","import Gallery from 'components/Gallery';\nimport useThemoviedb from 'components/hooks/useThemoviedb';\nimport PageTitle from 'components/PageTitle';\nimport Pagination from 'components/Pagination';\nimport SearchForm from 'components/SearchForm';\nimport { useEffect, useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function Movies() {\n  const { data, handlePage, setQuery } = useThemoviedb('searchMovie');\n  const [searchParams] = useSearchParams();\n\n  const params = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n\n  const { query } = params;\n\n  useEffect(() => {\n    if (!query) {\n      setQuery(null);\n      return;\n    }\n    setQuery(query);\n  }, [query, setQuery, searchParams]);\n\n  console.log(data);\n\n  return (\n    <>\n      <PageTitle titleText=\"Movies search\" />\n      <SearchForm />\n      {data && (\n        <>\n          <Gallery items={data.results} />\n          <Pagination\n            totalItems={data.total_results}\n            currentPage={data?.page}\n            updateCurrentPage={handlePage}\n          />\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["StyledLink","styled","Link","GalleryUlStyled","GalleryLiStyled","p","theme","animation","easeFast","ImgStyled","DescrListStyled","DescrTitleStyled","colors","black","fontWeights","medium","fontSizes","m","DescrGenreStyled","accent","Gallery","items","location","useLocation","onError","event","target","src","plaseholderImg","style","height","map","poster_path","release_date","genres","id","title","to","state","from","className","alt","loading","width","slice","elem","name","join","PageTitle","titleText","useTheme","Box","backgroundColor","main","alignItems","pt","pb","mt","borderRadius","as","Pagination","totalItems","currentPage","updateCurrentPage","$el","useRef","useEffect","paginate","pagination","current","itemsPerPage","visiblePages","movePageTo","on","page","window","scrollTo","top","behavior","ref","FormStyled","LabelStyled","InputStyled","ButtonStyled","radii","normal","white","API_KEY","useThemoviedb","mode","useState","query","setQuery","useSearchParams","searchParams","setSearchParams","data","setData","useMemo","axios","params","api_key","result","getData","useCallback","updateGenres","handlePage","newPage","paramsObj","get","results","film","genre_ids","genreId","genre","find","element","push","SearchForm","formik","useFormik","initialValues","input","onSubmit","validationSchema","Yup","min","required","handleSubmit","htmlFor","type","onChange","handleChange","value","values","placeholder","Movies","Object","fromEntries","console","log","total_results"],"sourceRoot":""}